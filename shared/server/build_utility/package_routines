#QPKG_NAME=""
######################################################################
# List of available definitions (it's not necessary to uncomment them)
######################################################################
###### Command definitions #####
#CMD_AWK="/bin/awk"
#CMD_CAT="/bin/cat"
#CMD_CHMOD="/bin/chmod"
#CMD_CHOWN="/bin/chown"
#CMD_CP="/bin/cp"
#CMD_CUT="/bin/cut"
#CMD_DATE="/bin/date"
#CMD_ECHO="/bin/echo"
#CMD_EXPR="/usr/bin/expr"
#CMD_FIND="/usr/bin/find"
#CMD_GETCFG="/sbin/getcfg"
#CMD_GREP="/bin/grep"
#CMD_GZIP="/bin/gzip"
#CMD_HOSTNAME="/bin/hostname"
#CMD_LN="/bin/ln"
#CMD_LOG_TOOL="/sbin/log_tool"
#CMD_MD5SUM="/bin/md5sum"
#CMD_MKDIR="/bin/mkdir"
#CMD_MV="/bin/mv"
#CMD_RM="/bin/rm"
#CMD_RMDIR="/bin/rmdir"
#CMD_SED="/bin/sed"
#CMD_SETCFG="/sbin/setcfg"
#CMD_SLEEP="/bin/sleep"
#CMD_SORT="/usr/bin/sort"
#CMD_SYNC="/bin/sync"
#CMD_TAR="/bin/tar"
#CMD_TOUCH="/bin/touch"
#CMD_WGET="/usr/bin/wget"
#CMD_WLOG="/sbin/write_log"
#CMD_XARGS="/usr/bin/xargs"
#CMD_7Z="/usr/local/sbin/7z"
#
###### System definitions #####
#SYS_EXTRACT_DIR="$(pwd)"
#SYS_CONFIG_DIR="/etc/config"
#SYS_INIT_DIR="/etc/init.d"
#SYS_STARTUP_DIR="/etc/rcS.d"
#SYS_SHUTDOWN_DIR="/etc/rcK.d"
#SYS_RSS_IMG_DIR="/home/httpd/RSS/images"
#SYS_QPKG_DATA_FILE_GZIP="./data.tar.gz"
#SYS_QPKG_DATA_FILE_BZIP2="./data.tar.bz2"
#SYS_QPKG_DATA_FILE_7ZIP="./data.tar.7z"
#SYS_QPKG_DATA_CONFIG_FILE="./conf.tar.gz"
#SYS_QPKG_DATA_MD5SUM_FILE="./md5sum"
#SYS_QPKG_DATA_PACKAGES_FILE="./Packages.gz"
#SYS_QPKG_CONFIG_FILE="$SYS_CONFIG_DIR/qpkg.conf"
#SYS_QPKG_CONF_FIELD_QPKGFILE="QPKG_File"
#SYS_QPKG_CONF_FIELD_NAME="Name"
#SYS_QPKG_CONF_FIELD_VERSION="Version"
#SYS_QPKG_CONF_FIELD_ENABLE="Enable"
#SYS_QPKG_CONF_FIELD_DATE="Date"
#SYS_QPKG_CONF_FIELD_SHELL="Shell"
#SYS_QPKG_CONF_FIELD_INSTALL_PATH="Install_Path"
#SYS_QPKG_CONF_FIELD_CONFIG_PATH="Config_Path"
#SYS_QPKG_CONF_FIELD_WEBUI="WebUI"
#SYS_QPKG_CONF_FIELD_WEBPORT="Web_Port"
#SYS_QPKG_CONF_FIELD_SERVICEPORT="Service_Port"
#SYS_QPKG_CONF_FIELD_SERVICE_PIDFILE="Pid_File"
#SYS_QPKG_CONF_FIELD_AUTHOR="Author"
#SYS_QPKG_CONF_FIELD_RC_NUMBER="RC_Number"
## The following variables are assigned values at run-time.
#SYS_HOSTNAME=$($CMD_HOSTNAME)
## Data file name (one of SYS_QPKG_DATA_FILE_GZIP, SYS_QPKG_DATA_FILE_BZIP2,
## or SYS_QPKG_DATA_FILE_7ZIP)
#SYS_QPKG_DATA_FILE=
## Base location.
#SYS_QPKG_BASE=""
## Base location of QPKG installed packages.
#SYS_QPKG_INSTALL_PATH=""
## Location of installed software.
#SYS_QPKG_DIR=""
## If the QPKG should be enabled or disabled after the installation/upgrade.
#SYS_QPKG_SERVICE_ENABLED=""
## Architecture of the device the QPKG is installed on.
#SYS_CPU_ARCH=""
## Name and location of system shares
#SYS_PUBLIC_SHARE=""
#SYS_PUBLIC_PATH=""
#SYS_DOWNLOAD_SHARE=""
#SYS_DOWNLOAD_PATH=""
#SYS_MULTIMEDIA_SHARE=""
#SYS_MULTIMEDIA_PATH=""
#SYS_RECORDINGS_SHARE=""
#SYS_RECORDINGS_PATH=""
#SYS_USB_SHARE=""
#SYS_USB_PATH=""
#SYS_WEB_SHARE=""
#SYS_WEB_PATH=""
## Path to ipkg or opkg package tool if installed.
#CMD_PKG_TOOL=
#
######################################################################
# All package specific functions shall call 'err_log MSG' if an error
# is detected that shall terminate the installation.
######################################################################
#
######################################################################
# Installation specific variables
######################################################################
container_path=$(/sbin/getcfg container-station Install_Path -f /etc/config/qpkg.conf)
export PATH=$container_path/bin:$container_path/sbin:$PATH

SYS_DOCKER_ERROR="Docker command error"
SYS_NEED_UPGRADE=0
SYS_CONF=/etc/config/qpkg.conf
CONF=/etc/config/qpkg.conf
QPKG_INSTALLDIR=$(/sbin/getcfg $QPKG_NAME Install_Path -f $CONF)
QPKG_PATH="/mnt/ext/opt/$QPKG_NAME"
#
######################################################################
# Define any package specific operations that shall be performed when
# the package is removed.
######################################################################
PKG_PRE_REMOVE="{
  $QPKG_INSTALLDIR/removecontainer.sh $QPKG_INSTALLDIR
}"
#
#PKG_MAIN_REMOVE="{
#}"
#
#PKG_POST_REMOVE="{
#}"
#
######################################################################
# Define any package specific initialization that shall be performed
# before the package is installed.
######################################################################
#pkg_init(){
#}
#
######################################################################
# Define any package specific requirement checks that shall be
# performed before the package is installed.
######################################################################
#pkg_check_requirement(){
#}
#
######################################################################
# user defined helper function
######################################################################

version_check() {
  current_qpkg=$(echo $current_qpkg_ver | awk -F 'v' '{print $1}')
  new_qpkg_num=$(echo $QPKG_VER | awk -F 'v' '{print $1}')
  current_qpkg_major=$(echo $current_qpkg | awk -F '.' '{print $1}')
  current_qpkg_minor=$(echo $current_qpkg | awk -F '.' '{print $2}')
  current_qpkg_last=$(echo $current_qpkg | awk -F '.' '{print $3}')
  new_qpkg_num_major=$(echo $new_qpkg_num | awk -F '.' '{print $1}')
  new_qpkg_num_minor=$(echo $new_qpkg_num | awk -F '.' '{print $2}')
  new_qpkg_num_last=$(echo $new_qpkg_num | awk -F '.' '{print $3}')
  
  if [ -n "$current_qpkg_major" ] && [ $(expr $new_qpkg_num_major \> $current_qpkg_major) -eq 1 ]
  then
    echo "perform docker image upgrade"
    SYS_NEED_UPGRADE=1
  elif [ -n "$current_qpkg_major" ] && [ $(expr $new_qpkg_num_major = $current_qpkg_major) -eq 1 ]
  then
    echo "check minor version"
    if [ $(expr $new_qpkg_num_minor \> $current_qpkg_minor) -eq 1 ]
    then
      SYS_NEED_UPGRADE=1
    elif [ $(expr $current_qpkg_minor = $new_qpkg_num_minor) -eq 1 ]
    then
      if [ $(expr $new_qpkg_num_last \> $current_qpkg_last) -eq 1 ]
      then
        SYS_NEED_UPGRADE=1
      elif [ $(expr $new_qpkg_num_last = $current_qpkg_last) -eq 1 ]
      then
        echo "same version"
      else
        echo "downgrade ..."
        SYS_NEED_UPGRADE=1
      fi
    else
      SYS_NEED_UPGRADE=1
      echo "downgrade"
    fi
  elif [ -n "$current_qpkg_major" ] && [ $(expr $new_qpkg_num_major \< $current_qpkg_major) -eq 1 ]
  then
    echo "perform docker image downgrade"
    SYS_NEED_UPGRADE=1
  else
    echo "New install $QPKG_PATH"
    SYS_NEED_UPGRADE=1
  fi
}
#
######################################################################
# Define any package specific operations that shall be performed when
# the package is installed.
######################################################################
pkg_pre_install(){
	version_check
}
#
pkg_install(){
	echo "$QPKG_NAME pkg_install" >> /tmp/$QPKG_NAME.log
  if test -h $QPKG_PATH; then
    /bin/rm -rf $QPKG_PATH
  fi
  /bin/ln -sf $SYS_QPKG_DIR /mnt/ext/opt/$QPKG_NAME 2>/dev/null
  if test $SYS_NEED_UPGRADE = 1; then
    echo "upgrading ..."
    $SYS_QPKG_DIR/images/initimages.sh $SYS_QPKG_DIR
    if [ $? -eq 1 ]; then
      err_log "$SYS_DOCKER_ERROR"
    fi
    $SYS_QPKG_DIR/init/initcontainer.sh $SYS_QPKG_DIR
	fi  

  $CMD_SETCFG $QPKG_NAME Visible 2 -f ${SYS_CONF}
  $CMD_SETCFG $QPKG_NAME Volume_Select 3 -f ${SYS_CONF}
}
#
pkg_post_install(){
	echo "$QPKG_NAME pkg_post_install" >> /tmp/$QPKG_NAME.log
}
